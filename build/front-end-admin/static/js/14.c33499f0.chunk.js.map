{"version":3,"sources":["Service/UrlClient.ts","Layout/Header/index.tsx","../notification/index.jsx","Service/SetPrice.ts","ComponentsAdmin/Manager/ComponentManager/Service/ManagerService.tsx","ComponentsAdmin/Manager/ComponentManager/Service/index.tsx"],"names":["authLink","setContext","_","headers","link","createHttpLink","uri","credentials","fetchOptions","client","ApolloClient","cache","InMemoryCache","concat","Header","Layout","login","localStorage","getItem","withRouter","props","push","history","useState","isLogin","setIsLogin","className","type","justify","to","span","size","icon","onClick","removeItem","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","getPlacementStyle","placement","top","bottom","style","left","right","typeToIcon","success","info","error","warning","api","open","args","outerPrefixCls","prefixCls","duration","iconNode","iconType","autoMarginTag","getContainer","defaultGetContainer","closeIcon","defaultCloseIcon","cacheKey","callback","closeIconToRender","Notification","getNotificationInstance","notification","content","closable","onClose","key","close","Object","config","options","destroy","forEach","SETPRICE","gql","setPrice","price","method","mutate","mutation","variables","parseFloat","then","res","data","Option","Select","PriceInput","handleNumberChange","e","number","parseInt","target","value","isNaN","triggerChange","changedValue","onChange","this","width","marginRight","React","Component","Method","handleCurrencyChange","currency","Demo","state","current","form","handleClick","setState","handleSubmit","preventDefault","validateFields","err","values","message","catch","checkPrice","rule","getFieldDecorator","selectedKeys","mode","textAlign","Item","layout","onSubmit","label","initialValue","rules","validator","marginTop","htmlType","WrappedDemo","Form","create","name","Page","ManagerService"],"mappings":"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","file":"static/js/14.c33499f0.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from \"apollo-boost\";\r\nimport { createHttpLink, } from \"apollo-link-http\";\r\nimport { setContext } from \"apollo-link-context\";\r\nconst authLink = setContext((_, { headers }) => {\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n        }\r\n    }\r\n});\r\nconst link = createHttpLink({\r\n    uri: \"http://api.herebedragon.com:4000/graphql\",\r\n    credentials: 'include',\r\n    fetchOptions: {\r\n        credentials: 'include',\r\n    }\r\n});\r\nconst client = new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    link: authLink.concat(link),\r\n});\r\n\r\nexport default client;","import React, { FunctionComponent, useState } from \"react\";\r\nimport { Layout, Row, Col, Button, Icon, Avatar } from \"antd\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\nconst Header = Layout;\r\nconst login = localStorage.getItem(\"userInfo\");\r\n\r\nconst AdminHeader: FunctionComponent<any> = props => {\r\n  const { push } = props.history;\r\n  const [isLogin, setIsLogin] = useState(login);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    setIsLogin(\"\");\r\n    push(\"/LoginAdmin\");\r\n  };\r\n  return (\r\n    <Header className=\"header\">\r\n      <Row type=\"flex\" justify=\"space-between\">\r\n        <Link to=\"/EditableTable\" className=\"button-blog\">\r\n          ADMIN\r\n        </Link>\r\n        {isLogin ? (\r\n          <Col span={4} className=\"button-block-loggedin\">\r\n            <Avatar size=\"large\" icon=\"user\" />\r\n            <Button onClick={handleLogout}>\r\n              <Icon type=\"logout\" />\r\n              {`Log out`}\r\n            </Button>\r\n          </Col>\r\n        ) : (\r\n          <Col span={4} className=\"button-block\">\r\n            <Button>\r\n              <Link to=\"/LoginAdmin\">{`Login`}</Link>\r\n            </Button>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Header>\r\n\r\n  );\r\n};\r\n\r\nexport default withRouter(AdminHeader);\r\n\r\n","import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance({ prefixCls, placement = defaultPlacement, getContainer = defaultGetContainer, top, bottom, closeIcon = defaultCloseIcon, }, callback) {\n    const cacheKey = `${prefixCls}-${placement}`;\n    if (notificationInstance[cacheKey]) {\n        callback(notificationInstance[cacheKey]);\n        return;\n    }\n    const closeIconToRender = (<span className={`${prefixCls}-close-x`}>\n      {closeIcon || <Icon className={`${prefixCls}-close-icon`} type=\"close\"/>}\n    </span>);\n    Notification.newInstance({\n        prefixCls,\n        className: `${prefixCls}-${placement}`,\n        style: getPlacementStyle(placement, top, bottom),\n        getContainer,\n        closeIcon: closeIconToRender,\n    }, (notification) => {\n        notificationInstance[cacheKey] = notification;\n        callback(notification);\n    });\n}\nconst typeToIcon = {\n    success: 'check-circle-o',\n    info: 'info-circle-o',\n    error: 'close-circle-o',\n    warning: 'exclamation-circle-o',\n};\nfunction notice(args) {\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        const iconType = typeToIcon[args.type];\n        iconNode = (<Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType}/>);\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    const { placement, top, bottom, getContainer, closeIcon } = args;\n    getNotificationInstance({\n        prefixCls: outerPrefixCls,\n        placement,\n        top,\n        bottom,\n        getContainer,\n        closeIcon,\n    }, (notification) => {\n        notification.notice({\n            content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>),\n            duration,\n            closable: true,\n            onClose: args.onClose,\n            onClick: args.onClick,\n            key: args.key,\n            style: args.style || {},\n            className: args.className,\n        });\n    });\n}\nconst api = {\n    open: notice,\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            notificationInstance[cacheKey].destroy();\n            delete notificationInstance[cacheKey];\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\nexport default api;\n","import { gql } from \"apollo-boost\";\r\nimport client from './UrlClient';\r\nimport { message } from \"antd\";\r\n\r\nconst SETPRICE = gql`\r\n    mutation SetPrice(\r\n        $price:Float!,\r\n        $method:METHODS!,\r\n    ){\r\n        setPrice(\r\n            price:$price,\r\n            method:$method,\r\n        )\r\n        }\r\n`\r\nconst setPrice = (price: string, method: \"PERCM\" | \"PERPIC\") => {\r\n\r\n    return client.mutate({\r\n        mutation: SETPRICE,\r\n        variables: {\r\n            price: parseFloat(price),\r\n            method,\r\n        }\r\n    }).then(res => {\r\n        return res.data.setPrice;\r\n\r\n    })\r\n}\r\nexport default setPrice","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Select, Button, Menu, Icon, notification } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport setPrice from \"../../../../Service/SetPrice\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass PriceInput extends React.Component<any, any> {\r\n  handleNumberChange = (e: any) => {\r\n    const number = parseInt(e.target.value || 0, 10);\r\n    if (isNaN(number)) {\r\n      return;\r\n    }\r\n    this.triggerChange({ number });\r\n  };\r\n\r\n  triggerChange = (changedValue: any) => {\r\n    const { onChange, value } = this.props;\r\n    if (onChange) {\r\n      onChange({\r\n        ...value,\r\n        ...changedValue\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { size, value } = this.props;\r\n    return (\r\n      <span>\r\n        <Input\r\n          type=\"text\"\r\n          size={size}\r\n          value={value.number}\r\n          onChange={this.handleNumberChange}\r\n          style={{ width: \"auto\", marginRight: \"3%\" }}\r\n        />\r\n      </span>\r\n    );\r\n  }\r\n}\r\nclass Method extends React.Component<any, any> {\r\n  handleCurrencyChange = (currency: any) => {\r\n    this.triggerChange({ currency });\r\n  };\r\n\r\n  triggerChange = (changedValue: any) => {\r\n    const { onChange, value } = this.props;\r\n    if (onChange) {\r\n      onChange({\r\n        ...value,\r\n        ...changedValue\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { size, value } = this.props;\r\n    return (\r\n      <span>\r\n        <Select\r\n          value={value.currency}\r\n          size={size}\r\n          style={{ width: \"auto\" }}\r\n          onChange={this.handleCurrencyChange}\r\n        >\r\n          <Option value=\"PERCM\">PERCM</Option>\r\n          <Option value=\"PERPIC\">PERPIC</Option>\r\n        </Select>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nclass Demo extends React.Component<any, any> {\r\n  state = {\r\n    current: \"6\"\r\n  };\r\n  form: any;\r\n\r\n  handleClick = (e: any) => {\r\n    this.setState({\r\n      current: e.key\r\n    });\r\n  };\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n\r\n        setPrice(values.price.number, values.method.currency)\r\n          .then(() => {\r\n            notification.success({\r\n              message: `SetPrice Successful`\r\n            });\r\n          })\r\n          .catch(err => {\r\n            notification.error({\r\n              message: `SetPrice Fail`\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  checkPrice = (rule: any, value: any, callback: any) => {\r\n    if (value.number > 0) {\r\n      return callback();\r\n    }\r\n    callback(\"Price must greater than zero or must be a number!\");\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <>\r\n        <Menu\r\n          onClick={this.handleClick}\r\n          selectedKeys={[this.state.current]}\r\n          mode=\"horizontal\"\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          <Menu.Item key=\"1\">\r\n            <Icon type=\"user\" />\r\n            <span>ManagerUser</span>\r\n            <Link to=\"/ManagerUser\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <Icon type=\"shopping\" />\r\n            <span>ManagerOrder</span>\r\n            <Link to=\"/ManagerOrder\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <Icon type=\"user-add\" />\r\n            <span>RegisterEmployee</span>\r\n            <Link to=\"/RegisterEmployee\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\">\r\n            <Icon type=\"team\" />\r\n            <span>ManagerEmployee</span>\r\n            <Link to=\"/ManagerEmployee\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\">\r\n            <Icon type=\"file-image\" />\r\n            <span>ManagerImage</span>\r\n            <Link to=\"/ManagerImage\"></Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"6\">\r\n            <Icon type=\"api\" />\r\n            <span>ManagerService</span>\r\n            <Link to=\"/ManagerService\"></Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Form\r\n          layout=\"inline\"\r\n          onSubmit={this.handleSubmit}\r\n          style={{ textAlign: \"center\" }}\r\n        >\r\n          <Form.Item label=\"Method\">\r\n            {getFieldDecorator(\"method\", {\r\n              initialValue: { currency: \"PERCM\" }\r\n            })(<Method />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Price\">\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: { number: 0 },\r\n              rules: [{ validator: this.checkPrice }]\r\n            })(<PriceInput />)}\r\n          </Form.Item>\r\n          <br />\r\n          <Form.Item style={{ marginTop: \"50px\" }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDemo = Form.create({ name: \"customized_form_controls\" })(Demo);\r\n\r\nexport default WrappedDemo;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport ManagerService from \"./ManagerService\";\r\nimport QueueAnim from \"rc-queue-anim\";\r\nimport Header from \"../../../../Layout/Header\";\r\nconst Page: FunctionComponent = () => {\r\n  const margin = {\r\n    marginTop: \"100px\"\r\n  };\r\n  return (\r\n    <QueueAnim type={[\"right\", \"left\"]}>\r\n      <Header />\r\n      <div key=\"0\" style={margin}>\r\n        <ManagerService />\r\n      </div>\r\n    </QueueAnim>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n"],"sourceRoot":""}